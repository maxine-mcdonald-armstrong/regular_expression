#Copyright (c) 2021 Nicolas Ferr√©

# Permission is hereby granted, free of charge, to any
# person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the
# Software without restriction, including without
# limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software
# is furnished to do so, subject to the following
# conditions:

# The above copyright notice and this permission notice
# shall be included in all copies or substantial portions
# of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF
# ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
# TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT
# SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
# IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

name: CI

on:
    push:
        branches:
          - main
    pull_request:
        branches:
          - main

env:
    CARGO_TERM_COLOR: always
    RUST_VERSION_STABLE: 1.84.1

jobs:

  test:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION_STABLE }}
          profile: minimal
          override: true
      - name: Build
        run: cargo build --all-targets
      - name: Test
        run: cargo test

  lint-rust:
    runs-on: ubuntu-18.04
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION_STABLE }}
          profile: minimal
          components: rustfmt, clippy
          override: true
      - name: Run clippy
        run: cargo clippy --all-targets -- -D warnings $(cat .lints | cut -f1 -d"#" | tr '\n' ' ')
      - name: Run rustfmt
        run: cargo fmt -- --check
      - name: Run cargo-deny
        uses: EmbarkStudios/cargo-deny-action@v1

  lint-generic:
    runs-on: ubuntu-18.04
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install other dependencies
        run: sudo apt-get install moreutils dos2unix
      - name: Check encoding
        run: isutf8 **/*
      - name: Check line endings
        run: bash .github/workflows/scripts/check_line_endings.sh
      - name: Check TODOs
        run: bash .github/workflows/scripts/check_todos.sh
